Feature 1: when click on add contact button a form appears that contains:
    > inputs for full name, email, & phone #
    > submit button
    > cancel button
    > also, want to add dropdown option to the form that allows user to
      select a tag

Input Requirements:
example: tested submitting x for fullname, x for phone #, and x for email
 > for emails need to check if there is an '@' in the email and that there is
     >= 1 character after the @ followed by a period & >= 2 more characters
    examples: x       // invalid email
              x@yco   // invalid email
              x@y.co  // valid email
              x@y.c   // invalid email
    <> assuming case insensitive for characters
      <=> regex pattern: /[a-z]{1,}@[a-z]{1,}\.[a-z]{2,}/i
      
 > phone number doesn't have validation (base version allows for
    inputting 'x') - will assume american numbers and add validation
    that checks for ###-###-#### format where # = number 0-9
    <=> regex pattern: /[0-9]{3}-[0-9]{3}-[0-9]{4}/
 > fullname can't be empty or consist of only spaces
   regex: [A-Za-z]{1,}  <=> requiring at least one alphabetical character
 > can implement all the above regex via the pattern attribute of the html
   form; when use pattern attribute, don't use start/end '/' in the patterns above
 > base requirements for validation to allow user to submit the same exact contact
   info more than once

Implementation:
 i. find all buttons associated with adding contact info or cancelling out of 
  add + edit contact info forms
 ii. iterate over the add and cancel buttons and add a click event listener
    to each of them
    > if have a lot of click event listeners, will consider implementing
     event delegation, but for now features are minimal, so okay to add event
     listener to each
 iii. upon clicking any one of the buttons, toggle the hide class from the buttons,
  the search field, and the add contact info form
    > instead of using add/remove, can toggle each element's current classList to
     either add the hide class if it's not present already or remove the hide class
     if it is present

Feature 2: when click submit form and don't get an alert about an incorrect requirement
from one of the html form inputs:
 i. create a unique id for the contact info
 i. add the user's submitted contact info + unique id into an object that gets pushed
  to an array of all contacts (will refactor later to send data to server)
 iii. integrate a handlebars template into the html
     > use the each helper to iterate over all the contact info objects in the array
     > format into html the object's contact info (don't show the id in the html though)
 iv. unhide the first add contact button and search field and hide the add contact info form
 v. instead of displaying the second add contact button and text that states there are no
   contacts, show the contact info submitted


Implementation:
 i. add event listener to the addForm button that gets fired when the form is submitted
 ii. prevent default behavior, because don't want the page to reload upon submission
 iii. parse the form data as json
 iv. add a unique id property to the object to keep track of the specific contact's info
   > edit the approach to creating the contactManager object; return it from an immediately
    invoked function
   > within the private scope created by the immediately invoked function, create a generate id
    function that will be accessible to the contactManager's method property that creates
    new contact info objects
 iv. push the contact info object into an array property that stores all contact info
 v. create + compile handlebars template that will iterate through the array of contact objects
  and render each in the html
   > in the template keep track of each object's id via integrating it into the anchor element's
    href attribute
 vi. hide the add form and uhide the first add contact button and search field
 vi. use the function returned from Handlebars.compile to add all contact info into the html

Feature 3: when click on delete link associated with a particular contact, delete all associated
contact info (name, email, phone, & tag)

Implementation:
 i. Add click event listener to the div that contains all ul elements of contacts that exist
 ii. Check if the click event's target is an anchor element
 iii. If it's an anchor element, check if the href includes delete
 iv. if it's found that the target, the first element to receive notification of the event, was
  the delete anchor element send confirm to user to ensure that they do want to delete the contact
  info
 v. if the user confirms, then find the contact's id # in the href attribute
 vi. delete the contact object from the allContacts array that has an id property equal to
  the id # of the anchor element that the user clicked on
 vii. delete the closest ul element, as that will delete all html elements that have textContent
  that includes data associated with the contact info that's trying to be deleted
 viii. check if allContacts array has a length of zero; if it does, then unhide the second add contact
  button and text that states that there are no contacts

Feature 4: when click on edit link associated with a particular contact, add edit form that contains
the contact's current info for the name, email, phone & tag properties

Implementation:
 i. Edit the click event listener that was added to the div that contains all ul elements of
  contacts that exist; specifically, update the conditional that checks if the anchor element's
  href includes edit 
 ii. if edit is included, then find the contact's id # in the href attribute
 iii. select from the allContacts array the object that has an id property equal to
  the id # of the anchor element that the user clicked on
 iv. hide elements of the main display
 v. iterate through the editForm object's name, tag, email, and phone number properties and
  update them to reflect the properties of the contact object that the user clicked on
 vi. insert an edit html form element into the html using handlebars template
   > pass into handlebars template function the editForm object that has been updated to reflect
    the contact info of the contact that the user clicked on
 vi. if the user submits an edit successfully then find the corresponding contact object in the
    allContacts array and edit its properties to match all the values in the form that was
    successfully just submitted
 vii. if the user clicks cancel, then first add contact button and search form should appear
  and there is at least one confirmed contact in the data, so the 2nd add contact button should be
  hidden
